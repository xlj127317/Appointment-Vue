<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.backstage.mapper.ActuallyMapper">
    <resultMap id="BaseResultMap" type="com.ruoyi.backstage.domain.Actually">
        <!--@mbg.generated-->
        <!--@Table actually-->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="type_id" jdbcType="VARCHAR" property="typeId"/>
        <result column="actually_name" jdbcType="VARCHAR" property="actuallyName"/>
        <result column="actually_content" jdbcType="VARCHAR" property="actuallyContent"/>
        <result column="actually_money" jdbcType="VARCHAR" property="actuallyMoney"/>
        <result column="contract_id" jdbcType="VARCHAR" property="contractId"/>
        <result column="owner_id" jdbcType="VARCHAR" property="ownerId"/>
        <result column="create_id" jdbcType="VARCHAR" property="createId"/>
        <result column="is_flag" jdbcType="INTEGER" property="isFlag"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,
        type_id,
        actually_name,
        actually_content,
        actually_money,
        contract_id,
        owner_id,
        create_id,
        is_flag,
        create_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from actually
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--@mbg.generated-->
        delete
        from actually
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insertSelective" parameterType="com.ruoyi.backstage.domain.Actually">
        <!--@mbg.generated-->
        insert into actually
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="actuallyName != null">
                actually_name,
            </if>
            <if test="actuallyContent != null">
                actually_content,
            </if>
            <if test="actuallyMoney != null">
                actually_money,
            </if>
            <if test="contractId != null">
                contract_id,
            </if>
            <if test="ownerId != null">
                owner_id,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="isFlag != null">
                is_flag,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=VARCHAR},
            </if>
            <if test="actuallyName != null">
                #{actuallyName,jdbcType=VARCHAR},
            </if>
            <if test="actuallyContent != null">
                #{actuallyContent,jdbcType=VARCHAR},
            </if>
            <if test="actuallyMoney != null">
                #{actuallyMoney,jdbcType=VARCHAR},
            </if>
            <if test="contractId != null">
                #{contractId,jdbcType=VARCHAR},
            </if>
            <if test="ownerId != null">
                #{ownerId,jdbcType=VARCHAR},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=VARCHAR},
            </if>
            <if test="isFlag != null">
                #{isFlag,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.backstage.domain.Actually">
        <!--@mbg.generated-->
        update actually
        <set>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=VARCHAR},
            </if>
            <if test="actuallyName != null">
                actually_name = #{actuallyName,jdbcType=VARCHAR},
            </if>
            <if test="actuallyContent != null">
                actually_content = #{actuallyContent,jdbcType=VARCHAR},
            </if>
            <if test="actuallyMoney != null">
                actually_money = #{actuallyMoney,jdbcType=VARCHAR},
            </if>
            <if test="contractId != null">
                contract_id = #{contractId,jdbcType=VARCHAR},
            </if>
            <if test="ownerId != null">
                owner_id = #{ownerId,jdbcType=VARCHAR},
            </if>
            <if test="createId != null">
                create_id = #{createId,jdbcType=VARCHAR},
            </if>
            <if test="isFlag != null">
                is_flag = #{isFlag,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ruoyi.backstage.domain.Actually">
        <!--@mbg.generated-->
        update actually
        set type_id          = #{typeId,jdbcType=VARCHAR},
            actually_name    = #{actuallyName,jdbcType=VARCHAR},
            actually_content = #{actuallyContent,jdbcType=VARCHAR},
            actually_money   = #{actuallyMoney,jdbcType=VARCHAR},
            contract_id      = #{contractId,jdbcType=VARCHAR},
            owner_id         = #{ownerId,jdbcType=VARCHAR},
            create_id        = #{createId,jdbcType=VARCHAR},
            is_flag          = #{isFlag,jdbcType=INTEGER},
            create_time      = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>