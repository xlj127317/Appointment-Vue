<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.property.mapper.AdvanceMapper">
    <resultMap id="BaseResultMap" type="com.ruoyi.property.domain.Advance">
        <!--@mbg.generated-->
        <!--@Table advance-->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="contract_id" jdbcType="VARCHAR" property="contractId"/>
        <result column="owner_id" jdbcType="VARCHAR" property="ownerId"/>
        <result column="payment_type" jdbcType="VARCHAR" property="paymentType"/>
        <result column="payment_name" jdbcType="VARCHAR" property="paymentName"/>
        <result column="payment_content" jdbcType="VARCHAR" property="paymentContent"/>
        <result column="advance_money" jdbcType="VARCHAR" property="advanceMoney"/>
        <result column="pay_type" jdbcType="VARCHAR" property="payType"/>
        <result column="advance_date" jdbcType="TIMESTAMP" property="advanceDate"/>
        <result column="deduct_status" jdbcType="INTEGER" property="deductStatus"/>
        <result column="deduct_time" jdbcType="TIMESTAMP" property="deductTime"/>
        <result column="create_id" jdbcType="VARCHAR" property="createId"/>
        <result column="is_flag" jdbcType="INTEGER" property="isFlag"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,
        contract_id,
        owner_id,
        payment_type,
        payment_name,
        payment_content,
        advance_money,
        pay_type,
        advance_date,
        deduct_status,
        deduct_time,
        create_id,
        is_flag,
        create_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from advance
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--@mbg.generated-->
        delete
        from advance
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insertSelective" parameterType="com.ruoyi.property.domain.Advance">
        <!--@mbg.generated-->
        insert into advance
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="contractId != null">
                contract_id,
            </if>
            <if test="ownerId != null">
                owner_id,
            </if>
            <if test="paymentType != null">
                payment_type,
            </if>
            <if test="paymentName != null">
                payment_name,
            </if>
            <if test="paymentContent != null">
                payment_content,
            </if>
            <if test="advanceMoney != null">
                advance_money,
            </if>
            <if test="payType != null">
                pay_type,
            </if>
            <if test="advanceDate != null">
                advance_date,
            </if>
            <if test="deductStatus != null">
                deduct_status,
            </if>
            <if test="deductTime != null">
                deduct_time,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="isFlag != null">
                is_flag,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="contractId != null">
                #{contractId,jdbcType=VARCHAR},
            </if>
            <if test="ownerId != null">
                #{ownerId,jdbcType=VARCHAR},
            </if>
            <if test="paymentType != null">
                #{paymentType,jdbcType=VARCHAR},
            </if>
            <if test="paymentName != null">
                #{paymentName,jdbcType=VARCHAR},
            </if>
            <if test="paymentContent != null">
                #{paymentContent,jdbcType=VARCHAR},
            </if>
            <if test="advanceMoney != null">
                #{advanceMoney,jdbcType=VARCHAR},
            </if>
            <if test="payType != null">
                #{payType,jdbcType=VARCHAR},
            </if>
            <if test="advanceDate != null">
                #{advanceDate,jdbcType=TIMESTAMP},
            </if>
            <if test="deductStatus != null">
                #{deductStatus,jdbcType=INTEGER},
            </if>
            <if test="deductTime != null">
                #{deductTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=VARCHAR},
            </if>
            <if test="isFlag != null">
                #{isFlag,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.property.domain.Advance">
        <!--@mbg.generated-->
        update advance
        <set>
            <if test="contractId != null">
                contract_id = #{contractId,jdbcType=VARCHAR},
            </if>
            <if test="ownerId != null">
                owner_id = #{ownerId,jdbcType=VARCHAR},
            </if>
            <if test="paymentType != null">
                payment_type = #{paymentType,jdbcType=VARCHAR},
            </if>
            <if test="paymentName != null">
                payment_name = #{paymentName,jdbcType=VARCHAR},
            </if>
            <if test="paymentContent != null">
                payment_content = #{paymentContent,jdbcType=VARCHAR},
            </if>
            <if test="advanceMoney != null">
                advance_money = #{advanceMoney,jdbcType=VARCHAR},
            </if>
            <if test="payType != null">
                pay_type = #{payType,jdbcType=VARCHAR},
            </if>
            <if test="advanceDate != null">
                advance_date = #{advanceDate,jdbcType=TIMESTAMP},
            </if>
            <if test="deductStatus != null">
                deduct_status = #{deductStatus,jdbcType=INTEGER},
            </if>
            <if test="deductTime != null">
                deduct_time = #{deductTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createId != null">
                create_id = #{createId,jdbcType=VARCHAR},
            </if>
            <if test="isFlag != null">
                is_flag = #{isFlag,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="selectAdvanceList" parameterType="com.ruoyi.property.domain.Advance" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from advance
        <where>
            is_flag = 0
            <if test="contractId != null  and contractId != ''">
                and contract_id =
                    #{contractId}
            </if>
            <if test="paymentType != null  and paymentType != ''">
                and payment_type
                    =
                    #{paymentType}
            </if>
            <if test="paymentName != null  and paymentName != ''">
                and payment_name
                    like
                    concat
                        (
                            '%',
                            #{paymentName},
                            '%'
                        )
            </if>
            <if test="advanceDate != null">
                and advance_date
                    =
                    #{advanceDate}
            </if>
            <if test="deductStatus != null">
                and deduct_status
                    =
                    #{deductStatus}
            </if>
            <if test="createTimeBegin != null">
                <!-- 开始时间检索 -->
                AND create_time &gt;= #{createTimeBegin}
            </if>
            <if test="createTimeEnd != null">
                <!-- 结束时间检索 -->
                AND create_time &lt;= #{createTimeEnd}
            </if>
        </where>
        order by create_time desc
    </select>

    <select id="selectAdvanceById" parameterType="String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from advance
        where id = #{id}
    </select>

    <insert id="insertAdvance" parameterType="com.ruoyi.property.domain.Advance">
        insert into advance
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="contractId != null and contractId != ''">
                contract_id,
            </if>
            <if test="ownerId != null and ownerId != ''">
                owner_id,
            </if>
            <if test="paymentType != null and paymentType != ''">
                payment_type,
            </if>
            <if test="paymentName != null and paymentName != ''">
                payment_name,
            </if>
            <if test="paymentContent != null and paymentContent != ''">
                payment_content,
            </if>
            <if test="advanceMoney != null and advanceMoney != ''">
                advance_money,
            </if>
            <if test="payType != null and payType != ''">
                pay_type,
            </if>
            <if test="advanceDate != null">
                advance_date,
            </if>
            <if test="deductStatus != null">
                deduct_status,
            </if>
            <if test="deductTime != null">
                deduct_time,
            </if>
            <if test="createId != null and createId != ''">
                create_id,
            </if>
            <if test="isFlag != null">
                is_flag,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="contractId != null and contractId != ''">
                #{contractId},
            </if>
            <if test="ownerId != null and ownerId != ''">
                #{ownerId},
            </if>
            <if test="paymentType != null and paymentType != ''">
                #{paymentType},
            </if>
            <if test="paymentName != null and paymentName != ''">
                #{paymentName},
            </if>
            <if test="paymentContent != null and paymentContent != ''">
                #{paymentContent},
            </if>
            <if test="advanceMoney != null and advanceMoney != ''">
                #{advanceMoney},
            </if>
            <if test="payType != null and payType != ''">
                #{payType},
            </if>
            <if test="advanceDate != null">
                #{advanceDate},
            </if>
            <if test="deductStatus != null">
                #{deductStatus},
            </if>
            <if test="deductTime != null">
                #{deductTime},
            </if>
            <if test="createId != null and createId != ''">
                #{createId},
            </if>
            <if test="isFlag != null">
                #{isFlag},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
        </trim>
    </insert>

    <update id="updateAdvance" parameterType="com.ruoyi.property.domain.Advance">
        update advance
        <trim prefix="SET" suffixOverrides=",">
            <if test="contractId != null and contractId != ''">
                contract_id =
                    #{contractId},
            </if>
            <if test="ownerId != null and ownerId != ''">
                owner_id =
                    #{ownerId},
            </if>
            <if test="paymentType != null and paymentType != ''">
                payment_type =
                    #{paymentType},
            </if>
            <if test="paymentName != null and paymentName != ''">
                payment_name =
                    #{paymentName},
            </if>
            <if test="paymentContent != null and paymentContent != ''">
                payment_content =
                    #{paymentContent},
            </if>
            <if test="advanceMoney != null and advanceMoney != ''">
                advance_money =
                    #{advanceMoney},
            </if>
            <if test="payType != null and payType != ''">
                pay_type =
                    #{payType},
            </if>
            <if test="advanceDate != null">
                advance_date =
                    #{advanceDate},
            </if>
            <if test="deductStatus != null">
                deduct_status =
                    #{deductStatus},
            </if>
            <if test="deductTime != null">
                deduct_time =
                    #{deductTime},
            </if>
            <if test="createId != null and createId != ''">
                create_id =
                    #{createId},
            </if>
            <if test="isFlag != null">
                is_flag =
                    #{isFlag},
            </if>
            <if test="createTime != null">
                create_time =
                    #{createTime},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAdvanceById" parameterType="String">
        delete
        from advance
        where id = #{id}
    </delete>

    <update id="deleteAdvanceByIds" parameterType="String">
        update advance
        set is_flag = 1 where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="checkExists" resultType="boolean">
        <bind name="beginOfMonth" value="@cn.hutool.core.date.DateUtil@beginOfMonth(date)"/>
        <bind name="endOfMonth" value="@cn.hutool.core.date.DateUtil@endOfMonth(date)"/>
        SELECT EXISTS (
            SELECT 1 FROM advance
                WHERE contract_id = #{contractId}
                AND payment_type = #{paymentTypeId}
                AND advance_date BETWEEN #{beginOfMonth} AND #{endOfMonth}
            LIMIT 1
        );
    </select>

    <select id="select" resultMap="BaseResultMap">
        SELECT * FROM advance
        <where>
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="ownerId != null">
                AND owner_id = #{ownerId}
            </if>
            <if test="deleted == null">
                AND is_flag = 0
            </if>
        </where>
        <if test="limit != null">
            LIMIT #{limit}
        </if>
        <choose>
            <when test="lockMode == @com.ruoyi.common.enums.SqlLockMode@SHARE">
                LOCK IN SHARE MODE
            </when>
            <when test="lockMode == @com.ruoyi.common.enums.SqlLockMode@UPDATE">
                FOR UPDATE
            </when>
        </choose>
    </select>
</mapper>