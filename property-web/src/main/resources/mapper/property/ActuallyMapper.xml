<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.property.mapper.ActuallyMapper">
    <resultMap id="BaseResultMap" type="com.ruoyi.property.domain.Actually">
        <!--@mbg.generated-->
        <!--@Table actually-->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="type_id" jdbcType="VARCHAR" property="typeId"/>
        <result column="actually_name" jdbcType="VARCHAR" property="actuallyName"/>
        <result column="actually_content" jdbcType="VARCHAR" property="actuallyContent"/>
        <result column="actually_money" jdbcType="VARCHAR" property="actuallyMoney"/>
        <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime"/>
        <result column="contract_id" jdbcType="VARCHAR" property="contractId"/>
        <result column="owner_id" jdbcType="VARCHAR" property="ownerId"/>
        <result column="create_id" jdbcType="VARCHAR" property="createId"/>
        <result column="advance_status" jdbcType="INTEGER" property="advanceStatus"/>
        <result column="actually_status" jdbcType="INTEGER" property="actuallyStatus"/>
        <result column="is_arrears" jdbcType="INTEGER" property="isArrears"/>
        <result column="payment_type" jdbcType="INTEGER" property="paymentType"/>
        <result column="actually_time" jdbcType="TIMESTAMP" property="actuallyTime"/>
        <result column="is_flag" jdbcType="INTEGER" property="isFlag"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,
        type_id,
        actually_name,
        actually_content,
        actually_money,
        payment_time,
        contract_id,
        owner_id,
        create_id,
        advance_status,
        actually_status,
        is_arrears,
        payment_type,
        actually_time,
        is_flag,
        create_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from actually
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--@mbg.generated-->
        delete
        from actually
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.ruoyi.property.domain.Actually">
        <!--@mbg.generated-->
        insert into actually (id, type_id, actually_name,
                              actually_content, actually_money, payment_time,
                              contract_id, owner_id, create_id,
                              advance_status, actually_status, is_arrears,
                              payment_type, actually_time, is_flag,
                              create_time)
        values (#{id,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}, #{actuallyName,jdbcType=VARCHAR},
                #{actuallyContent,jdbcType=VARCHAR}, #{actuallyMoney,jdbcType=VARCHAR},
                #{paymentTime,jdbcType=TIMESTAMP},
                #{contractId,jdbcType=VARCHAR}, #{ownerId,jdbcType=VARCHAR}, #{createId,jdbcType=VARCHAR},
                #{advanceStatus,jdbcType=INTEGER}, #{actuallyStatus,jdbcType=INTEGER}, #{isArrears,jdbcType=INTEGER},
                #{paymentType,jdbcType=INTEGER}, #{actuallyTime,jdbcType=TIMESTAMP}, #{isFlag,jdbcType=INTEGER},
                #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.ruoyi.property.domain.Actually">
        <!--@mbg.generated-->
        insert into actually
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="actuallyName != null">
                actually_name,
            </if>
            <if test="actuallyContent != null">
                actually_content,
            </if>
            <if test="actuallyMoney != null">
                actually_money,
            </if>
            <if test="paymentTime != null">
                payment_time,
            </if>
            <if test="contractId != null">
                contract_id,
            </if>
            <if test="ownerId != null">
                owner_id,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="advanceStatus != null">
                advance_status,
            </if>
            <if test="actuallyStatus != null">
                actually_status,
            </if>
            <if test="isArrears != null">
                is_arrears,
            </if>
            <if test="paymentType != null">
                payment_type,
            </if>
            <if test="actuallyTime != null">
                actually_time,
            </if>
            <if test="isFlag != null">
                is_flag,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=VARCHAR},
            </if>
            <if test="actuallyName != null">
                #{actuallyName,jdbcType=VARCHAR},
            </if>
            <if test="actuallyContent != null">
                #{actuallyContent,jdbcType=VARCHAR},
            </if>
            <if test="actuallyMoney != null">
                #{actuallyMoney,jdbcType=VARCHAR},
            </if>
            <if test="paymentTime != null">
                #{paymentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="contractId != null">
                #{contractId,jdbcType=VARCHAR},
            </if>
            <if test="ownerId != null">
                #{ownerId,jdbcType=VARCHAR},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=VARCHAR},
            </if>
            <if test="advanceStatus != null">
                #{advanceStatus,jdbcType=INTEGER},
            </if>
            <if test="actuallyStatus != null">
                #{actuallyStatus,jdbcType=INTEGER},
            </if>
            <if test="isArrears != null">
                #{isArrears,jdbcType=INTEGER},
            </if>
            <if test="paymentType != null">
                #{paymentType,jdbcType=INTEGER},
            </if>
            <if test="actuallyTime != null">
                #{actuallyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isFlag != null">
                #{isFlag,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.property.domain.Actually">
        <!--@mbg.generated-->
        update actually
        <set>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=VARCHAR},
            </if>
            <if test="actuallyName != null">
                actually_name = #{actuallyName,jdbcType=VARCHAR},
            </if>
            <if test="actuallyContent != null">
                actually_content = #{actuallyContent,jdbcType=VARCHAR},
            </if>
            <if test="actuallyMoney != null">
                actually_money = #{actuallyMoney,jdbcType=VARCHAR},
            </if>
            <if test="paymentTime != null">
                payment_time = #{paymentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="contractId != null">
                contract_id = #{contractId,jdbcType=VARCHAR},
            </if>
            <if test="ownerId != null">
                owner_id = #{ownerId,jdbcType=VARCHAR},
            </if>
            <if test="createId != null">
                create_id = #{createId,jdbcType=VARCHAR},
            </if>
            <if test="advanceStatus != null">
                advance_status = #{advanceStatus,jdbcType=INTEGER},
            </if>
            <if test="actuallyStatus != null">
                actually_status = #{actuallyStatus,jdbcType=INTEGER},
            </if>
            <if test="isArrears != null">
                is_arrears = #{isArrears,jdbcType=INTEGER},
            </if>
            <if test="paymentType != null">
                payment_type = #{paymentType,jdbcType=INTEGER},
            </if>
            <if test="actuallyTime != null">
                actually_time = #{actuallyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isFlag != null">
                is_flag = #{isFlag,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ruoyi.property.domain.Actually">
        <!--@mbg.generated-->
        update actually
        set type_id          = #{typeId,jdbcType=VARCHAR},
            actually_name    = #{actuallyName,jdbcType=VARCHAR},
            actually_content = #{actuallyContent,jdbcType=VARCHAR},
            actually_money   = #{actuallyMoney,jdbcType=VARCHAR},
            payment_time     = #{paymentTime,jdbcType=TIMESTAMP},
            contract_id      = #{contractId,jdbcType=VARCHAR},
            owner_id         = #{ownerId,jdbcType=VARCHAR},
            create_id        = #{createId,jdbcType=VARCHAR},
            advance_status   = #{advanceStatus,jdbcType=INTEGER},
            actually_status  = #{actuallyStatus,jdbcType=INTEGER},
            is_arrears       = #{isArrears,jdbcType=INTEGER},
            payment_type     = #{paymentType,jdbcType=INTEGER},
            actually_time    = #{actuallyTime,jdbcType=TIMESTAMP},
            is_flag          = #{isFlag,jdbcType=INTEGER},
            create_time      = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateByIds">
        update actually a
        set a.is_flag = 1
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectActuallyList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from actually
        <where>
            is_flag = 0
            <if test="typeId != null  and typeId != ''">
                and type_id = #{typeId}
            </if>
            <if test="actuallyName != null  and actuallyName != ''">
                and actually_name like concat('%', #{actuallyName}, '%')
            </if>
            <if test="actuallyContent != null  and actuallyContent != ''">
                and actually_content = #{actuallyContent}
            </if>
            <if test="actuallyMoney != null  and actuallyMoney != ''">
                and actually_money = #{actuallyMoney}
            </if>
            <if test="paymentTime != null">
                and payment_time = #{paymentTime}
            </if>
            <if test="contractId != null  and contractId != ''">
                and contract_id = #{contractId}
            </if>
            <if test="ownerId != null  and ownerId != ''">
                and owner_id = #{ownerId}
            </if>
            <if test="createId != null  and createId != ''">
                and create_id = #{createId}
            </if>
            <if test="advanceStatus != null">
                and advance_status = #{advanceStatus}
            </if>
            <if test="actuallyStatus != null">
                and actually_status = #{actuallyStatus}
            </if>
            <if test="isArrears != null">
                and is_arrears = #{isArrears}
            </if>
            <if test="paymentType != null">
                and payment_type = #{paymentType}
            </if>
            <if test="params.beginTime != null and params.beginTime != ''">
                <!-- 开始时间检索 -->
                AND date_format(create_time, '%y%m%d') &gt;= date_format(#{params.beginTime}, '%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''">
                <!-- 结束时间检索 -->
                AND date_format(create_time, '%y%m%d') &lt;= date_format(#{params.endTime}, '%y%m%d')
            </if>
        </where>
        order by create_time desc
    </select>

    <select id="selectOne" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from actually
        where id = #{id,jdbcType=VARCHAR}
          and is_flag = 0
    </select>
</mapper>