<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.property.mapper.DepositMapper">
  <resultMap id="BaseResultMap" type="com.ruoyi.property.domain.Deposit">
    <!--@mbg.generated-->
    <!--@Table deposit-->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="contract_id" jdbcType="VARCHAR" property="contractId" />
    <result column="deposit_money" jdbcType="VARCHAR" property="depositMoney" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="is_flag" jdbcType="INTEGER" property="isFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_id, contract_id, deposit_money, update_user, update_time, create_id, is_flag, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from deposit
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from deposit
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insertSelective" parameterType="com.ruoyi.property.domain.Deposit">
    <!--@mbg.generated-->
    insert into deposit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="depositMoney != null">
        deposit_money,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="isFlag != null">
        is_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="depositMoney != null">
        #{depositMoney,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="isFlag != null">
        #{isFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.property.domain.Deposit">
    <!--@mbg.generated-->
    update deposit
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null">
        contract_id = #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="depositMoney != null">
        deposit_money = #{depositMoney,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="isFlag != null">
        is_flag = #{isFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruoyi.property.domain.Deposit">
    <!--@mbg.generated-->
    update deposit
    set user_id = #{userId,jdbcType=VARCHAR},
      contract_id = #{contractId,jdbcType=VARCHAR},
      deposit_money = #{depositMoney,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=VARCHAR},
      is_flag = #{isFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <select id="selectDepositList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from deposit
        <where>
            is_flag = 0
            <if test="userId != null  and userId != ''">
                and user_id =
                    #{userId}
            </if>
            <if test="contractId != null  and contractId != ''">
                and contract_id
                    =
                    #{contractId}
            </if>
            <if test="depositMoney != null  and depositMoney != ''">
                and deposit_money
                    =
                    #{depositMoney}
            </if>
            <if test="updateUser != null  and updateUser != ''">
                and update_user
                    =
                    #{updateUser}
            </if>
            <if test="createId != null  and createId != ''">
                and create_id
                    =
                    #{createId}
            </if>
            <if test="params.beginTime != null and params.beginTime != ''">
                <!-- 开始时间检索 -->
                AND date_format(create_time, '%y%m%d') &gt;= date_format(#{params.beginTime}, '%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''">
                <!-- 结束时间检索 -->
                AND date_format(create_time, '%y%m%d') &lt;= date_format(#{params.endTime}, '%y%m%d')
            </if>
        </where>
        order by create_time desc
    </select>

    <select id="selectDepositById" parameterType="String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from deposit
        where id = #{id}
    </select>

    <insert id="insertDeposit">
        insert into deposit
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null and userId != ''">
                user_id,
            </if>
            <if test="contractId != null and contractId != ''">
                contract_id,
            </if>
            <if test="depositMoney != null and depositMoney != ''">
                deposit_money,
            </if>
            <if test="updateUser != null and updateUser != ''">
                update_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createId != null and createId != ''">
                create_id,
            </if>
            <if test="isFlag != null">
                is_flag,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="userId != null and userId != ''">
                #{userId},
            </if>
            <if test="contractId != null and contractId != ''">
                #{contractId},
            </if>
            <if test="depositMoney != null and depositMoney != ''">
                #{depositMoney},
            </if>
            <if test="updateUser != null and updateUser != ''">
                #{updateUser},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="createId != null and createId != ''">
                #{createId},
            </if>
            <if test="isFlag != null">
                #{isFlag},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
        </trim>
    </insert>

    <update id="updateDeposit">
        update deposit
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null and userId != ''">
                user_id =
                    #{userId},
            </if>
            <if test="contractId != null and contractId != ''">
                contract_id =
                    #{contractId},
            </if>
            <if test="depositMoney != null and depositMoney != ''">
                deposit_money =
                    #{depositMoney},
            </if>
            <if test="updateUser != null and updateUser != ''">
                update_user =
                    #{updateUser},
            </if>
            <if test="updateTime != null">
                update_time =
                    #{updateTime},
            </if>
            <if test="createId != null and createId != ''">
                create_id =
                    #{createId},
            </if>
            <if test="isFlag != null">
                is_flag =
                    #{isFlag},
            </if>
            <if test="createTime != null">
                create_time =
                    #{createTime},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDepositById" parameterType="String">
        delete
        from deposit
        where id = #{id}
    </delete>

    <update id="deleteDepositByIds" parameterType="String">
        update deposit
        set is_flag = 1 where id in
        <foreach close=")" collection="array" item="id" open="(" separator=",">
            #{id}
        </foreach>
    </update>
</mapper>